# import UserOrderByInput,PostOrderByInput,CommentOrderByInput from './generated/prisma.graphql'
type Query {
  user: User!
  users(first: Int,skip: Int,orderBy: UserOrderByInput): [User!]!

  post(id: ID!): Post!
  posts(first: Int,skip: Int,orderBy: PostOrderByInput): [Post!]!

  comment(id: ID!): Comment!
  comments(orderBy:CommentOrderByInput):[Comment!]!

  myPosts: [Post!]!
}
type Mutation{
  login(email: String!,password: String!): Authpayload!

  createUser(data: createUserInput): Authpayload!
  updateUser(data: updateUserInput!): User!
  deleteUser: User!

  createPost(data: createPostInput): Post!
  updatePost(id: ID!,data: updatePostInput ): Post!
  deletePost(id: ID!): Post!

  createComment(data: createCommentInput): Comment!
  updateComment(id: ID!, data: updateCommentInput!): Comment!
  deleteComment(id: ID!): Comment!
}
type Subscription {
  comment: ComentSubscriptionPayload!
  post: PostSubscriptionPayload!
  user: UserSubscriptionPayload!
}




input createUserInput {
  name:String!
  email: String!
  password: String!
}
input updateUserInput {
  name:String
  email: String
  password: String
}
input createPostInput {
  title: String!
  body: String!
  published: Boolean
}
input updatePostInput {
  title: String
  body: String
  published: Boolean
}
input createCommentInput{
  text: String!
  post: String!
}
input updateCommentInput{
  text: String!
}
type User{
  id: ID!
  name: String!
  email: String
  password: String!
  posts:[Post!]!
  comments:[Comment!]
  createdAt: String!
  updatedAt: String!
}
type Post{
  id: ID!
  title: String!
  body: String!
  published: Boolean
  author: User!
  comments: [Comment!]
  createdAt: String!
  updatedAt: String!
}
type Comment{
  id: ID!
  text: String!
  author: User!
  post: Post!
  createdAt: String!
  updatedAt: String!
}


type PostSubscriptionPayload {
  mutation: MutationType!
  node: Post
}

type ComentSubscriptionPayload {
  mutation: MutationType!
  node: Comment
}
type UserSubscriptionPayload{
  mutation: MutationType!
  node: User
}


enum MutationType {
  CREATED
  UPDATED
  DELETED
}

type Authpayload {
  user: User!
  token: String!
}